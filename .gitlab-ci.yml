variables:
  KUBE_CONTEXT: timych/k8s-connection:k8s-home-connection
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
stages:
  - test
  - build
  - deploy

job-test:
  stage: test
  image: python:alpine3.17
  script:
    - echo "Testing requirements"
    - pip install -r services/web/requirements.txt
    # - python manage.py test
  tags:
    - k8s

job-docker-build:
  stage: build
  image: docker:20.10
  # services:
  #   - docker:20.10-dind
  # variables:
  #   DOCKER_TLS_CERTDIR: "/certs"
  variables:
    IMAGE_NAME: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
  script:
    - echo ${CI_PROJECT_PATH}
    # - cd services/web/
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker build -t $TAG_COMMIT -t $TAG_LATEST services/web/.
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  tags:
    - docker

job-helm-build:
  stage: build
  image:
    name: dtzar/helm-kubectl:3.14
    entrypoint: ['']
  variables:
    IMAGE_NAME: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}
  before_script:
    - echo ${kube_config}
    - helm plugin install https://github.com/chartmuseum/helm-push
  script:
    # Package chart
    - helm package ./charts/mixify --destination ./public
    # Generate index.yaml for GitLab Pages
    - helm repo index public --url "https://pages.timych.ru/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    # Add and push to GitLab Package Registry
    - helm repo add --username gitlab-ci-token --password ${CI_JOB_TOKEN} ${CI_PROJECT_NAME} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable
    - helm cm-push ./public/mixify-*.tgz ${CI_PROJECT_NAME}
  artifacts:
    paths:
      - public
  tags:
    - k8s

pages:
  stage: deploy
  script:
    - echo "Publishing Helm chart to GitLab Pages"
  artifacts:
    paths:
      - public
  only:
    - master

job-deploy-stage:
  stage: deploy
  environment:
    name: stage
  image:
    name: dtzar/helm-kubectl:3.14
    entrypoint: ['']
  script:
    - kubectl config use-context $KUBE_CONTEXT
    - helm repo add --username gitlab-ci-token --password ${CI_JOB_TOKEN} ${CI_PROJECT_NAME} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable
    - helm upgrade mixify-v1 ${CI_PROJECT_NAME}/${CI_PROJECT_NAME} --install --namespace mixify-v1 --create-namespace --set mixifySpec.clientid=$MIXIFY_CLIENTID --set mixifySpec.clientsecret=$MIXIFY_CLIENTSECRET --set mixifySpec.redirecturi="https://mixify.timych.ru" --set mixifySpec.url="mixify.timych.ru"
  # rules:
  #   - when: manual
  tags:
    - k8s


job-deploy-prod:
  stage: deploy
  environment:
    name: prod
  image: docker:20.10
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -p $SERVER_PORT $SERVER_HOST >> ~/.ssh/known_hosts
  script:
    - touch env-production
    - chmod 660 env-production
    - |
      cat <<EOF > env-production
      TAG_PROD=$TAG_COMMIT
      SPOTIPY_CLIENT_ID=$MIXIFY_CLIENTID
      SPOTIPY_CLIENT_SECRET=$MIXIFY_CLIENTSECRET
      SPOTIPY_REDIRECT_URI=$MIXIFY_REDIRECT_URI
      EOF
    - scp -P $SERVER_PORT env-production $SERVER_USER@$SERVER_HOST:/srv/mixify/.env
    - scp -r -P $SERVER_PORT deployment/production/* $SERVER_USER@$SERVER_HOST:/srv/mixify/
    - ssh -A -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}"
    - ssh -A -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "cd /srv/mixify/ && docker compose up -d --wait --force-recreate "
    - echo "Before multi-line SSH command"
    - echo "After multi-line SSH command"
  after_script:
    - ssh-agent -k
  # rules:
  #   - when: manual
  tags:
    - docker
