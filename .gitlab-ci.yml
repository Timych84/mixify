variables:
  KUBE_CONTEXT: timych/k8s-connection:k8s-home-connection
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
stages:
  - test
  - build
  - deploy

job-test:
  stage: test
  image: python:alpine3.17
  script:
    - pip install -r services/web/requirements.txt
    # - python manage.py test
  tags:
    - k8s

job-build:
  stage: build
  image: docker:20.10
  # services:
  #   - docker:20.10-dind
  # variables:
  #   DOCKER_TLS_CERTDIR: "/certs"
  variables:
    IMAGE_NAME: ${CI_PROJECT_PATH}:${CI_COMMIT_SHORT_SHA}

  script:
    - pwd
    - ls -lah
    - echo ${CI_PROJECT_PATH}
    # - cd services/web/
    - docker ps -a
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - docker system info
    - docker build -t $TAG_COMMIT -t $TAG_LATEST services/web/.
    # - docker build -t ${CI_REGISTRY}/${IMAGE_NAME}
    # - docker push ${CI_REGISTRY}/${IMAGE_NAME}
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
  tags:
    - docker

job-deploy-stage:
  stage: deploy
  image:
    name: dtzar/helm-kubectl:3.14
    entrypoint: ['']
  before_script:
    - echo ${kube_config}
  script:
    - ls -la
    - kubectl config get-contexts
    - kubectl config use-context $KUBE_CONTEXT
    - kubectl get pods
    - kubectl get nodes -o wide
    - helm list -A
    - echo $KUBE_CONFIG
    - helm package ./charts/mixify --destination ./charts
    - helm repo add --username gitlab-ci-token --password ${CI_JOB_TOKEN} ${CI_PROJECT_NAME} ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable
    - helm plugin install https://github.com/chartmuseum/helm-push
    - ls -la ./charts/
    - helm cm-push ./charts/${CI_PROJECT_NAME}*.tgz ${CI_PROJECT_NAME}
    - helm upgrade mixiy-v1 ${CI_PROJECT_NAME}/${CI_PROJECT_NAME} --install --namespace mixify-v1 --create-namespace --set mixifySpec.clientid=$MIXIFY_CLIENTID --set mixifySpec.clientsecret=$MIXIFY_CLIENTSECRET --set mixifySpec.redirecturi="https://mixify.timych.ru"
  tags:
    - k8s


job-deploy-prod:
  stage: deploy
  image: docker:20.10
  before_script:
    - echo ${kube_config}
  script:
    - ls -la
    - echo $KUBE_CONFIG
    - mkdir -p ~/.ssh/
    - echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_ed25519
    - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_ed25519.pub
    - cat ~/.ssh/id_ed25519.pub
    - nslookup $SERVER_HOST
    - ssh-keyscan -p $SERVER_PORT -H $SERVER_HOST >> ~/.ssh/known_hosts --verbose
    - cat ~/.ssh/id_ed25519.pub
    - VERSION=$(echo "$CI_COMMIT_REF_NAME" | sed 's/^v//')
    - chmod 600 ~/.ssh/id_ed25519
    - chmod 600 ~/.ssh/id_ed25519.pub
    - echo "$ENV_PRODUCTION" >> env-production
    - cat env-production
    - echo $TAG_COMMIT
    - sed -i 's/^TAG=.*$/TAG="$TAG_LATEST"/' env-production
    - cat env-production
    - ssh -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "df -h && docker ps -a"
    - ssh -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "docker login -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} ${CI_REGISTRY}"
    - ssh -p $SERVER_PORT $SERVER_USER@$SERVER_HOST "docker pull $TAG_LATEST"
  tags:
    - docker
